

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jan 27 21:51:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	nvCOMMON
   173     0077                     __pnvCOMMON:
   174     0077                     _LCD_busy_cnt:
   175     0077                     	ds	1
   176     0008                     _PORTDbits	set	8
   177     0088                     _TRISD	set	136
   178     0088                     _TRISDbits	set	136
   179                           
   180                           	psect	strings
   181     0003                     __pstrings:
   182     0003                     stringtab:
   183     0003                     __stringtab:
   184     0003                     stringcode:	
   185                           ;	String table - string pointers are 1 byte each
   186                           
   187     0003                     stringdir:
   188     0003  3000               	movlw	high stringdir
   189     0004  008A               	movwf	10
   190     0005  0804               	movf	4,w
   191     0006  0A84               	incf	4,f
   192     0007  0782               	addwf	2,f
   193     0008                     __stringbase:
   194     0008  3400               	retlw	0
   195     0009                     __end_of__stringtab:
   196     0009                     STR_1:
   197     0009  3454               	retlw	84	;'T'
   198     000A  3465               	retlw	101	;'e'
   199     000B  3473               	retlw	115	;'s'
   200     000C  3474               	retlw	116	;'t'
   201     000D  3465               	retlw	101	;'e'
   202     000E  346F               	retlw	111	;'o'
   203     000F  342E               	retlw	46	;'.'
   204     0010  342E               	retlw	46	;'.'
   205     0011  342E               	retlw	46	;'.'
   206     0012  342E               	retlw	46	;'.'
   207     0013  3400               	retlw	0
   208                           
   209                           	psect	cinit
   210     07F9                     start_initialization:	
   211                           ; #config settings
   212                           
   213     07F9                     __initialization:
   214                           
   215                           ; Clear objects allocated to COMMON
   216     07F9  01F4               	clrf	__pbssCOMMON& (0+127)
   217     07FA  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   218     07FB  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   219     07FC                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222     07FC                     __end_of__initialization:
   223     07FC  0183               	clrf	3
   224     07FD  120A  118A  2E49   	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	bssCOMMON
   227     0074                     __pbssCOMMON:
   228     0074                     __displaymode:
   229     0074                     	ds	1
   230     0075                     __displaycontrol:
   231     0075                     	ds	1
   232     0076                     _LCD_data:
   233     0076                     	ds	1
   234                           
   235                           	psect	cstackCOMMON
   236     0070                     __pcstackCOMMON:
   237     0070                     ?_LCD_Write:
   238     0070                     ?_LCD_Busy:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ??_LCD_Busy:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0070                     ?_LCD_Init:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ?_LCD_Text:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     LCD_Write@mode:	
   254                           ; 1 bytes @ 0x0
   255                           
   256                           
   257                           ; 1 bytes @ 0x0
   258     0070                     	ds	1
   259     0071                     ??_LCD_Write:
   260     0071                     LCD_Write@value:	
   261                           ; 1 bytes @ 0x1
   262                           
   263                           
   264                           ; 1 bytes @ 0x1
   265     0071                     	ds	1
   266     0072                     ??_LCD_Init:
   267     0072                     ??_LCD_Text:	
   268                           ; 1 bytes @ 0x2
   269                           
   270     0072                     LCD_Text@pt:	
   271                           ; 1 bytes @ 0x2
   272                           
   273                           
   274                           ; 1 bytes @ 0x2
   275     0072                     	ds	1
   276     0073                     LCD_Text@text:
   277                           
   278                           ; 1 bytes @ 0x3
   279     0073                     	ds	1
   280     0074                     ??_main:
   281                           
   282                           	psect	maintext
   283     0649                     __pmaintext:	
   284                           ; 1 bytes @ 0x4
   285 ;;
   286 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   287 ;;
   288 ;; *************** function _main *****************
   289 ;; Defined at:
   290 ;;		line 24 in file "main.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   299 ;; Tracked objects:
   300 ;;		On entry : B00/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   304 ;;      Params:         0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0
   307 ;;      Totals:         0       0       0       0       0
   308 ;;Total ram usage:        0 bytes
   309 ;; Hardware stack levels required when called: 2
   310 ;; This function calls:
   311 ;;		_LCD_Busy
   312 ;;		_LCD_Init
   313 ;;		_LCD_Text
   314 ;;		_LCD_Write
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320     0649                     _main:	
   321                           ;psect for function _main
   322                           
   323     0649                     l1000:	
   324                           ;incstack = 0
   325                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   326                           
   327                           
   328                           ;main.c: 26:     LCD_Init();
   329     0649  120A  118A  271A  120A  118A  	fcall	_LCD_Init
   330     064E                     l1002:	
   331                           ;main.c: 27:     while(LCD_Busy()); PORTDbits.RD1 = 0; LCD_Write(0x80 + (0x40 * 0) + 0,1
      +                          );
   332                           
   333     064E  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   334     0653  3A00               	xorlw	0
   335     0654  1D03               	skipz
   336     0655  2E57               	goto	u761
   337     0656  2E58               	goto	u760
   338     0657                     u761:
   339     0657  2E4E               	goto	l1002
   340     0658                     u760:
   341     0658                     l95:
   342     0658  1283               	bcf	3,5	;RP0=0, select bank0
   343     0659  1303               	bcf	3,6	;RP1=0, select bank0
   344     065A  1088               	bcf	8,1	;volatile
   345     065B                     l1004:
   346     065B  01F0               	clrf	LCD_Write@mode
   347     065C  0AF0               	incf	LCD_Write@mode,f
   348     065D  3080               	movlw	128
   349     065E  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   350     0663                     l1006:
   351                           
   352                           ;main.c: 28:     LCD_Text("Testeo....");
   353     0663  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   354     0664  120A  118A  25DC  120A  118A  	fcall	_LCD_Text
   355     0669                     l1008:	
   356                           ;main.c: 29:     while(LCD_Busy()); PORTDbits.RD1 = 0; LCD_Write(0x80 + (0x40 * 1) + 0,1
      +                          );
   357                           
   358     0669  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   359     066E  3A00               	xorlw	0
   360     066F  1D03               	skipz
   361     0670  2E72               	goto	u771
   362     0671  2E73               	goto	u770
   363     0672                     u771:
   364     0672  2E69               	goto	l1008
   365     0673                     u770:
   366     0673                     l98:
   367     0673  1283               	bcf	3,5	;RP0=0, select bank0
   368     0674  1303               	bcf	3,6	;RP1=0, select bank0
   369     0675  1088               	bcf	8,1	;volatile
   370     0676                     l1010:
   371     0676  01F0               	clrf	LCD_Write@mode
   372     0677  0AF0               	incf	LCD_Write@mode,f
   373     0678  30C0               	movlw	192
   374     0679  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   375     067E                     l1012:
   376                           
   377                           ;main.c: 30:     _displaycontrol |= 0x02; while(LCD_Busy()); PORTDbits.RD1 = 0; LCD_Writ
      +                          e((unsigned)0x08 | _displaycontrol,1);
   378     067E  14F5               	bsf	__displaycontrol,1
   379     067F                     l1014:
   380     067F  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   381     0684  3A00               	xorlw	0
   382     0685  1D03               	skipz
   383     0686  2E88               	goto	u781
   384     0687  2E89               	goto	u780
   385     0688                     u781:
   386     0688  2E7F               	goto	l1014
   387     0689                     u780:
   388     0689                     l101:
   389     0689  1283               	bcf	3,5	;RP0=0, select bank0
   390     068A  1303               	bcf	3,6	;RP1=0, select bank0
   391     068B  1088               	bcf	8,1	;volatile
   392     068C                     l1016:
   393     068C  01F0               	clrf	LCD_Write@mode
   394     068D  0AF0               	incf	LCD_Write@mode,f
   395     068E  0875               	movf	__displaycontrol,w
   396     068F  3808               	iorlw	8
   397     0690  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   398     0695                     l1018:
   399                           
   400                           ;main.c: 31:     _displaycontrol |= 0x01; while(LCD_Busy()); PORTDbits.RD1 = 0; LCD_Writ
      +                          e((unsigned)0x08 | _displaycontrol,1);
   401     0695  1475               	bsf	__displaycontrol,0
   402     0696                     l1020:
   403     0696  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   404     069B  3A00               	xorlw	0
   405     069C  1D03               	skipz
   406     069D  2E9F               	goto	u791
   407     069E  2EA0               	goto	u790
   408     069F                     u791:
   409     069F  2E96               	goto	l1020
   410     06A0                     u790:
   411     06A0                     l104:
   412     06A0  1283               	bcf	3,5	;RP0=0, select bank0
   413     06A1  1303               	bcf	3,6	;RP1=0, select bank0
   414     06A2  1088               	bcf	8,1	;volatile
   415     06A3                     l1022:
   416     06A3  01F0               	clrf	LCD_Write@mode
   417     06A4  0AF0               	incf	LCD_Write@mode,f
   418     06A5  0875               	movf	__displaycontrol,w
   419     06A6  3808               	iorlw	8
   420     06A7  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   421     06AC                     l105:	
   422                           ;main.c: 32:     while(1){
   423                           
   424     06AC                     l106:	
   425                           ;main.c: 34:     }
   426                           
   427     06AC  2EAC               	goto	l105
   428     06AD  120A  118A  2800   	ljmp	start
   429     06B0                     __end_of_main:
   430                           
   431                           	psect	text1
   432     05DC                     __ptext1:	
   433 ;; *************** function _LCD_Text *****************
   434 ;; Defined at:
   435 ;;		line 699 in file "./LCD_16x2.h"
   436 ;; Parameters:    Size  Location     Type
   437 ;;  pt              1    wreg     PTR void 
   438 ;;		 -> STR_1(11), 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  pt              1    2[COMMON] PTR void 
   441 ;;		 -> STR_1(11), 
   442 ;;  text            1    3[COMMON] PTR unsigned char 
   443 ;;		 -> STR_1(11), 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         0       0       0       0       0
   454 ;;      Locals:         2       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0
   456 ;;      Totals:         2       0       0       0       0
   457 ;;Total ram usage:        2 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; Hardware stack levels required when called: 1
   460 ;; This function calls:
   461 ;;		_LCD_Busy
   462 ;;		_LCD_Write
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468     05DC                     _LCD_Text:	
   469                           ;psect for function _LCD_Text
   470                           
   471                           
   472                           ;incstack = 0
   473                           ; Regs used in _LCD_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   474                           ;LCD_Text@pt stored from wreg
   475     05DC  00F2               	movwf	LCD_Text@pt
   476     05DD                     l936:
   477                           
   478                           ;./LCD_16x2.h: 700:     unsigned char *text = pt;
   479     05DD  0872               	movf	LCD_Text@pt,w
   480     05DE  00F3               	movwf	LCD_Text@text
   481                           
   482                           ;./LCD_16x2.h: 701:     while (*text) {
   483     05DF  2DFF               	goto	l944
   484     05E0                     l938:
   485     05E0  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   486     05E5  3A00               	xorlw	0
   487     05E6  1D03               	skipz
   488     05E7  2DE9               	goto	u651
   489     05E8  2DEA               	goto	u650
   490     05E9                     u651:
   491     05E9  2DE0               	goto	l938
   492     05EA                     u650:
   493     05EA                     l52:
   494     05EA  1283               	bcf	3,5	;RP0=0, select bank0
   495     05EB  1303               	bcf	3,6	;RP1=0, select bank0
   496     05EC  1488               	bsf	8,1	;volatile
   497     05ED                     l940:
   498     05ED  01F0               	clrf	LCD_Write@mode
   499     05EE  0AF0               	incf	LCD_Write@mode,f
   500     05EF  0873               	movf	LCD_Text@text,w
   501     05F0  0084               	movwf	4
   502     05F1  120A  118A  2003  120A  118A  	fcall	stringdir
   503     05F6  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   504     05FB                     l942:
   505                           
   506                           ;./LCD_16x2.h: 703:         text++;
   507     05FB  3001               	movlw	1
   508     05FC  00FF               	movwf	btemp+1
   509     05FD  087F               	movf	btemp+1,w
   510     05FE  07F3               	addwf	LCD_Text@text,f
   511     05FF                     l944:
   512                           
   513                           ;./LCD_16x2.h: 701:     while (*text) {
   514     05FF  0873               	movf	LCD_Text@text,w
   515     0600  0084               	movwf	4
   516     0601  120A  118A  2003  120A  118A  	fcall	stringdir
   517     0606  3A00               	xorlw	0
   518     0607  1D03               	skipz
   519     0608  2E0A               	goto	u661
   520     0609  2E0B               	goto	u660
   521     060A                     u661:
   522     060A  2DE0               	goto	l938
   523     060B                     u660:
   524     060B                     l54:
   525     060B  0008               	return
   526     060C                     __end_of_LCD_Text:
   527                           
   528                           	psect	text2
   529     071A                     __ptext2:	
   530 ;; *************** function _LCD_Init *****************
   531 ;; Defined at:
   532 ;;		line 628 in file "./LCD_16x2.h"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          2       0       0       0       0
   549 ;;      Totals:         2       0       0       0       0
   550 ;;Total ram usage:        2 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; Hardware stack levels required when called: 1
   553 ;; This function calls:
   554 ;;		_LCD_Busy
   555 ;;		_LCD_Write
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561     071A                     _LCD_Init:	
   562                           ;psect for function _LCD_Init
   563                           
   564     071A                     l880:	
   565                           ;incstack = 0
   566                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   567                           
   568                           
   569                           ;./LCD_16x2.h: 630:     TRISDbits.TRISD2 = 0;
   570     071A  1683               	bsf	3,5	;RP0=1, select bank1
   571     071B  1303               	bcf	3,6	;RP1=0, select bank1
   572     071C  1108               	bcf	8,2	;volatile
   573                           
   574                           ;./LCD_16x2.h: 631:     PORTDbits.RD2 = 0;
   575     071D  1283               	bcf	3,5	;RP0=0, select bank0
   576     071E  1303               	bcf	3,6	;RP1=0, select bank0
   577     071F  1108               	bcf	8,2	;volatile
   578                           
   579                           ;./LCD_16x2.h: 633:     TRISDbits.TRISD1 = 0;
   580     0720  1683               	bsf	3,5	;RP0=1, select bank1
   581     0721  1303               	bcf	3,6	;RP1=0, select bank1
   582     0722  1088               	bcf	8,1	;volatile
   583                           
   584                           ;./LCD_16x2.h: 634:     PORTDbits.RD1 = 0;
   585     0723  1283               	bcf	3,5	;RP0=0, select bank0
   586     0724  1303               	bcf	3,6	;RP1=0, select bank0
   587     0725  1088               	bcf	8,1	;volatile
   588                           
   589                           ;./LCD_16x2.h: 635:     TRISDbits.TRISD3 = 0;
   590     0726  1683               	bsf	3,5	;RP0=1, select bank1
   591     0727  1303               	bcf	3,6	;RP1=0, select bank1
   592     0728  1188               	bcf	8,3	;volatile
   593                           
   594                           ;./LCD_16x2.h: 636:     PORTDbits.RD3 = 0;
   595     0729  1283               	bcf	3,5	;RP0=0, select bank0
   596     072A  1303               	bcf	3,6	;RP1=0, select bank0
   597     072B  1188               	bcf	8,3	;volatile
   598     072C                     l882:
   599                           
   600                           ;./LCD_16x2.h: 638:     TRISD &= 0x0F;
   601     072C  300F               	movlw	15
   602     072D  00FF               	movwf	btemp+1
   603     072E  087F               	movf	btemp+1,w
   604     072F  1683               	bsf	3,5	;RP0=1, select bank1
   605     0730  1303               	bcf	3,6	;RP1=0, select bank1
   606     0731  0588               	andwf	8,f	;volatile
   607     0732                     l884:
   608                           
   609                           ;./LCD_16x2.h: 640:     LCD_busy_cnt = 1;
   610     0732  01F7               	clrf	_LCD_busy_cnt
   611     0733  0AF7               	incf	_LCD_busy_cnt,f
   612     0734                     l886:
   613                           
   614                           ;./LCD_16x2.h: 642:     _delay((unsigned long)((15)*(20000000/4000.0)));
   615     0734  3062               	movlw	98
   616     0735  00F3               	movwf	??_LCD_Init+1
   617     0736  3065               	movlw	101
   618     0737  00F2               	movwf	??_LCD_Init
   619     0738                     u807:
   620     0738  0BF2               	decfsz	??_LCD_Init,f
   621     0739  2F38               	goto	u807
   622     073A  0BF3               	decfsz	??_LCD_Init+1,f
   623     073B  2F38               	goto	u807
   624     073C  2F3D               	nop2
   625     073D                     l888:
   626                           
   627                           ;./LCD_16x2.h: 644:     PORTDbits.RD1 = 0; LCD_Write(0x30,0);
   628     073D  1283               	bcf	3,5	;RP0=0, select bank0
   629     073E  1303               	bcf	3,6	;RP1=0, select bank0
   630     073F  1088               	bcf	8,1	;volatile
   631     0740                     l890:
   632     0740  01F0               	clrf	LCD_Write@mode
   633     0741  3030               	movlw	48
   634     0742  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   635     0747                     l892:
   636                           
   637                           ;./LCD_16x2.h: 645:     _delay((unsigned long)((5)*(20000000/4000.0)));
   638     0747  3021               	movlw	33
   639     0748  00F3               	movwf	??_LCD_Init+1
   640     0749  3076               	movlw	118
   641     074A  00F2               	movwf	??_LCD_Init
   642     074B                     u817:
   643     074B  0BF2               	decfsz	??_LCD_Init,f
   644     074C  2F4B               	goto	u817
   645     074D  0BF3               	decfsz	??_LCD_Init+1,f
   646     074E  2F4B               	goto	u817
   647     074F  0000               	nop
   648     0750                     l894:
   649                           
   650                           ;./LCD_16x2.h: 646:     PORTDbits.RD1 = 0; LCD_Write(0x30,0);
   651     0750  1283               	bcf	3,5	;RP0=0, select bank0
   652     0751  1303               	bcf	3,6	;RP1=0, select bank0
   653     0752  1088               	bcf	8,1	;volatile
   654     0753                     l896:
   655     0753  01F0               	clrf	LCD_Write@mode
   656     0754  3030               	movlw	48
   657     0755  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   658     075A                     l898:
   659                           
   660                           ;./LCD_16x2.h: 647:     _delay((unsigned long)((5)*(20000000/4000.0)));
   661     075A  3021               	movlw	33
   662     075B  00F3               	movwf	??_LCD_Init+1
   663     075C  3076               	movlw	118
   664     075D  00F2               	movwf	??_LCD_Init
   665     075E                     u827:
   666     075E  0BF2               	decfsz	??_LCD_Init,f
   667     075F  2F5E               	goto	u827
   668     0760  0BF3               	decfsz	??_LCD_Init+1,f
   669     0761  2F5E               	goto	u827
   670     0762  0000               	nop
   671     0763                     l900:
   672                           
   673                           ;./LCD_16x2.h: 648:     PORTDbits.RD1 = 0; LCD_Write(0x30,0);
   674     0763  1283               	bcf	3,5	;RP0=0, select bank0
   675     0764  1303               	bcf	3,6	;RP1=0, select bank0
   676     0765  1088               	bcf	8,1	;volatile
   677     0766                     l902:
   678     0766  01F0               	clrf	LCD_Write@mode
   679     0767  3030               	movlw	48
   680     0768  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   681     076D                     l904:
   682                           
   683                           ;./LCD_16x2.h: 649:     _delay((unsigned long)((5)*(20000000/4000.0)));
   684     076D  3021               	movlw	33
   685     076E  00F3               	movwf	??_LCD_Init+1
   686     076F  3076               	movlw	118
   687     0770  00F2               	movwf	??_LCD_Init
   688     0771                     u837:
   689     0771  0BF2               	decfsz	??_LCD_Init,f
   690     0772  2F71               	goto	u837
   691     0773  0BF3               	decfsz	??_LCD_Init+1,f
   692     0774  2F71               	goto	u837
   693     0775  0000               	nop
   694     0776                     l906:
   695                           
   696                           ;./LCD_16x2.h: 658:     PORTDbits.RD1 = 0; LCD_Write(0x20,0);
   697     0776  1283               	bcf	3,5	;RP0=0, select bank0
   698     0777  1303               	bcf	3,6	;RP1=0, select bank0
   699     0778  1088               	bcf	8,1	;volatile
   700     0779                     l908:
   701     0779  01F0               	clrf	LCD_Write@mode
   702     077A  3020               	movlw	32
   703     077B  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   704     0780                     l910:	
   705                           ;./LCD_16x2.h: 659:     while (LCD_Busy()) {
   706                           
   707                           
   708                           ;./LCD_16x2.h: 659:     while (LCD_Busy()) {
   709     0780  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   710     0785  3A00               	xorlw	0
   711     0786  1D03               	skipz
   712     0787  2F89               	goto	u591
   713     0788  2F8A               	goto	u590
   714     0789                     u591:
   715     0789  2F80               	goto	l910
   716     078A                     u590:
   717     078A                     l912:
   718     078A  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   719     078F  3A00               	xorlw	0
   720     0790  1D03               	skipz
   721     0791  2F93               	goto	u601
   722     0792  2F94               	goto	u600
   723     0793                     u601:
   724     0793  2F8A               	goto	l912
   725     0794                     u600:
   726     0794                     l28:
   727     0794  1283               	bcf	3,5	;RP0=0, select bank0
   728     0795  1303               	bcf	3,6	;RP1=0, select bank0
   729     0796  1088               	bcf	8,1	;volatile
   730     0797                     l914:
   731     0797  01F0               	clrf	LCD_Write@mode
   732     0798  0AF0               	incf	LCD_Write@mode,f
   733     0799  3028               	movlw	40
   734     079A  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   735     079F                     l916:
   736                           
   737                           ;./LCD_16x2.h: 664:     _displaycontrol = 0x04 | 0x00 | 0x00;
   738     079F  3004               	movlw	4
   739     07A0  00F5               	movwf	__displaycontrol
   740     07A1                     l918:	
   741                           ;./LCD_16x2.h: 665:     while(LCD_Busy()); PORTDbits.RD1 = 0; LCD_Write((unsigned)0x08 |
      +                           _displaycontrol,1);
   742                           
   743     07A1  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   744     07A6  3A00               	xorlw	0
   745     07A7  1D03               	skipz
   746     07A8  2FAA               	goto	u611
   747     07A9  2FAB               	goto	u610
   748     07AA                     u611:
   749     07AA  2FA1               	goto	l918
   750     07AB                     u610:
   751     07AB                     l31:
   752     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   753     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   754     07AD  1088               	bcf	8,1	;volatile
   755     07AE                     l920:
   756     07AE  01F0               	clrf	LCD_Write@mode
   757     07AF  0AF0               	incf	LCD_Write@mode,f
   758     07B0  0875               	movf	__displaycontrol,w
   759     07B1  3808               	iorlw	8
   760     07B2  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   761     07B7                     l922:
   762                           
   763                           ;./LCD_16x2.h: 666:     _displaymode = 0x02 | 0x00;
   764     07B7  3002               	movlw	2
   765     07B8  00F4               	movwf	__displaymode
   766     07B9                     l924:	
   767                           ;./LCD_16x2.h: 667:     while(LCD_Busy()); PORTDbits.RD1 = 0; LCD_Write((unsigned)0x04 |
      +                           _displaymode,1);
   768                           
   769     07B9  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   770     07BE  3A00               	xorlw	0
   771     07BF  1D03               	skipz
   772     07C0  2FC2               	goto	u621
   773     07C1  2FC3               	goto	u620
   774     07C2                     u621:
   775     07C2  2FB9               	goto	l924
   776     07C3                     u620:
   777     07C3                     l34:
   778     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   779     07C4  1303               	bcf	3,6	;RP1=0, select bank0
   780     07C5  1088               	bcf	8,1	;volatile
   781     07C6                     l926:
   782     07C6  01F0               	clrf	LCD_Write@mode
   783     07C7  0AF0               	incf	LCD_Write@mode,f
   784     07C8  3006               	movlw	6
   785     07C9  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   786     07CE                     l928:	
   787                           ;./LCD_16x2.h: 668:     while(LCD_Busy()); PORTDbits.RD1 = 0; LCD_Write(0x01,1);
   788                           
   789     07CE  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   790     07D3  3A00               	xorlw	0
   791     07D4  1D03               	skipz
   792     07D5  2FD7               	goto	u631
   793     07D6  2FD8               	goto	u630
   794     07D7                     u631:
   795     07D7  2FCE               	goto	l928
   796     07D8                     u630:
   797     07D8                     l37:
   798     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   799     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   800     07DA  1088               	bcf	8,1	;volatile
   801     07DB                     l930:
   802     07DB  01F0               	clrf	LCD_Write@mode
   803     07DC  0AF0               	incf	LCD_Write@mode,f
   804     07DD  3001               	movlw	1
   805     07DE  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   806     07E3                     l932:	
   807                           ;./LCD_16x2.h: 669:     while(LCD_Busy()); PORTDbits.RD1 = 0; LCD_Write(0x02,1);
   808                           
   809     07E3  120A  118A  260C  120A  118A  	fcall	_LCD_Busy
   810     07E8  3A00               	xorlw	0
   811     07E9  1D03               	skipz
   812     07EA  2FEC               	goto	u641
   813     07EB  2FED               	goto	u640
   814     07EC                     u641:
   815     07EC  2FE3               	goto	l932
   816     07ED                     u640:
   817     07ED                     l40:
   818     07ED  1283               	bcf	3,5	;RP0=0, select bank0
   819     07EE  1303               	bcf	3,6	;RP1=0, select bank0
   820     07EF  1088               	bcf	8,1	;volatile
   821     07F0                     l934:
   822     07F0  01F0               	clrf	LCD_Write@mode
   823     07F1  0AF0               	incf	LCD_Write@mode,f
   824     07F2  3002               	movlw	2
   825     07F3  120A  118A  26B0  120A  118A  	fcall	_LCD_Write
   826     07F8                     l41:
   827     07F8  0008               	return
   828     07F9                     __end_of_LCD_Init:
   829                           
   830                           	psect	text3
   831     06B0                     __ptext3:	
   832 ;; *************** function _LCD_Write *****************
   833 ;; Defined at:
   834 ;;		line 674 in file "./LCD_16x2.h"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  value           1    wreg     unsigned char 
   837 ;;  mode            1    0[COMMON] unsigned char 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  value           1    1[COMMON] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         1       0       0       0       0
   850 ;;      Locals:         1       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0
   852 ;;      Totals:         2       0       0       0       0
   853 ;;Total ram usage:        2 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_LCD_Init
   859 ;;		_LCD_Text
   860 ;;		_main
   861 ;;		_LCD_CustomChar
   862 ;;		_LCD_print_number
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866     06B0                     _LCD_Write:	
   867                           ;psect for function _LCD_Write
   868                           
   869                           
   870                           ;incstack = 0
   871                           ; Regs used in _LCD_Write: [wreg+status,2+status,0]
   872                           ;LCD_Write@value stored from wreg
   873     06B0  00F1               	movwf	LCD_Write@value
   874     06B1                     l858:
   875                           
   876                           ;./LCD_16x2.h: 675:     LCD_data.all = value;
   877     06B1  0871               	movf	LCD_Write@value,w
   878     06B2  00F6               	movwf	_LCD_data
   879     06B3                     l860:
   880                           
   881                           ;./LCD_16x2.h: 677:     PORTDbits.RD2 = 0;
   882     06B3  1283               	bcf	3,5	;RP0=0, select bank0
   883     06B4  1303               	bcf	3,6	;RP1=0, select bank0
   884     06B5  1108               	bcf	8,2	;volatile
   885     06B6                     l862:
   886                           
   887                           ;./LCD_16x2.h: 679:     PORTDbits.RD7 = LCD_data.bit7;
   888     06B6  1BF6               	btfsc	_LCD_data,7
   889     06B7  2EB9               	goto	u421
   890     06B8  2EBD               	goto	u420
   891     06B9                     u421:
   892     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   893     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   894     06BB  1788               	bsf	8,7	;volatile
   895     06BC  2EC0               	goto	u434
   896     06BD                     u420:
   897     06BD  1283               	bcf	3,5	;RP0=0, select bank0
   898     06BE  1303               	bcf	3,6	;RP1=0, select bank0
   899     06BF  1388               	bcf	8,7	;volatile
   900     06C0                     u434:
   901     06C0                     l864:
   902                           
   903                           ;./LCD_16x2.h: 680:     PORTDbits.RD6 = LCD_data.bit6;
   904     06C0  1B76               	btfsc	_LCD_data,6
   905     06C1  2EC3               	goto	u441
   906     06C2  2EC7               	goto	u440
   907     06C3                     u441:
   908     06C3  1283               	bcf	3,5	;RP0=0, select bank0
   909     06C4  1303               	bcf	3,6	;RP1=0, select bank0
   910     06C5  1708               	bsf	8,6	;volatile
   911     06C6  2ECA               	goto	u454
   912     06C7                     u440:
   913     06C7  1283               	bcf	3,5	;RP0=0, select bank0
   914     06C8  1303               	bcf	3,6	;RP1=0, select bank0
   915     06C9  1308               	bcf	8,6	;volatile
   916     06CA                     u454:
   917     06CA                     l866:
   918                           
   919                           ;./LCD_16x2.h: 681:     PORTDbits.RD5 = LCD_data.bit5;
   920     06CA  1AF6               	btfsc	_LCD_data,5
   921     06CB  2ECD               	goto	u461
   922     06CC  2ED1               	goto	u460
   923     06CD                     u461:
   924     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   925     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   926     06CF  1688               	bsf	8,5	;volatile
   927     06D0  2ED4               	goto	u474
   928     06D1                     u460:
   929     06D1  1283               	bcf	3,5	;RP0=0, select bank0
   930     06D2  1303               	bcf	3,6	;RP1=0, select bank0
   931     06D3  1288               	bcf	8,5	;volatile
   932     06D4                     u474:
   933     06D4                     l868:
   934                           
   935                           ;./LCD_16x2.h: 682:     PORTDbits.RD4 = LCD_data.bit4;
   936     06D4  1A76               	btfsc	_LCD_data,4
   937     06D5  2ED7               	goto	u481
   938     06D6  2EDB               	goto	u480
   939     06D7                     u481:
   940     06D7  1283               	bcf	3,5	;RP0=0, select bank0
   941     06D8  1303               	bcf	3,6	;RP1=0, select bank0
   942     06D9  1608               	bsf	8,4	;volatile
   943     06DA  2EDE               	goto	u494
   944     06DB                     u480:
   945     06DB  1283               	bcf	3,5	;RP0=0, select bank0
   946     06DC  1303               	bcf	3,6	;RP1=0, select bank0
   947     06DD  1208               	bcf	8,4	;volatile
   948     06DE                     u494:
   949     06DE                     l870:
   950                           
   951                           ;./LCD_16x2.h: 684:     PORTDbits.RD3 = 1; _delay((unsigned long)((1)*(20000000/4000000.
      +                          0))); PORTDbits.RD3 = 0;;
   952     06DE  1588               	bsf	8,3	;volatile
   953     06DF                     l872:
   954     06DF  2EE0               	nop2	;2 cycle nop
   955     06E0  2EE1               	nop2	;2 cycle nop
   956     06E1  0000               	nop
   957     06E2                     l874:
   958     06E2  1283               	bcf	3,5	;RP0=0, select bank0
   959     06E3  1303               	bcf	3,6	;RP1=0, select bank0
   960     06E4  1188               	bcf	8,3	;volatile
   961     06E5                     l876:
   962                           
   963                           ;./LCD_16x2.h: 685:     if (mode) {
   964     06E5  0870               	movf	LCD_Write@mode,w
   965     06E6  1903               	btfsc	3,2
   966     06E7  2EE9               	goto	u501
   967     06E8  2EEA               	goto	u500
   968     06E9                     u501:
   969     06E9  2F19               	goto	l45
   970     06EA                     u500:
   971     06EA                     l878:
   972                           
   973                           ;./LCD_16x2.h: 687:         PORTDbits.RD7 = LCD_data.bit3;
   974     06EA  19F6               	btfsc	_LCD_data,3
   975     06EB  2EED               	goto	u511
   976     06EC  2EF1               	goto	u510
   977     06ED                     u511:
   978     06ED  1283               	bcf	3,5	;RP0=0, select bank0
   979     06EE  1303               	bcf	3,6	;RP1=0, select bank0
   980     06EF  1788               	bsf	8,7	;volatile
   981     06F0  2EF4               	goto	u524
   982     06F1                     u510:
   983     06F1  1283               	bcf	3,5	;RP0=0, select bank0
   984     06F2  1303               	bcf	3,6	;RP1=0, select bank0
   985     06F3  1388               	bcf	8,7	;volatile
   986     06F4                     u524:
   987                           
   988                           ;./LCD_16x2.h: 688:         PORTDbits.RD6 = LCD_data.bit2;
   989     06F4  1976               	btfsc	_LCD_data,2
   990     06F5  2EF7               	goto	u531
   991     06F6  2EFB               	goto	u530
   992     06F7                     u531:
   993     06F7  1283               	bcf	3,5	;RP0=0, select bank0
   994     06F8  1303               	bcf	3,6	;RP1=0, select bank0
   995     06F9  1708               	bsf	8,6	;volatile
   996     06FA  2EFE               	goto	u544
   997     06FB                     u530:
   998     06FB  1283               	bcf	3,5	;RP0=0, select bank0
   999     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1000     06FD  1308               	bcf	8,6	;volatile
  1001     06FE                     u544:
  1002                           
  1003                           ;./LCD_16x2.h: 689:         PORTDbits.RD5 = LCD_data.bit1;
  1004     06FE  18F6               	btfsc	_LCD_data,1
  1005     06FF  2F01               	goto	u551
  1006     0700  2F05               	goto	u550
  1007     0701                     u551:
  1008     0701  1283               	bcf	3,5	;RP0=0, select bank0
  1009     0702  1303               	bcf	3,6	;RP1=0, select bank0
  1010     0703  1688               	bsf	8,5	;volatile
  1011     0704  2F08               	goto	u564
  1012     0705                     u550:
  1013     0705  1283               	bcf	3,5	;RP0=0, select bank0
  1014     0706  1303               	bcf	3,6	;RP1=0, select bank0
  1015     0707  1288               	bcf	8,5	;volatile
  1016     0708                     u564:
  1017                           
  1018                           ;./LCD_16x2.h: 690:         PORTDbits.RD4 = LCD_data.bit0;
  1019     0708  1876               	btfsc	_LCD_data,0
  1020     0709  2F0B               	goto	u571
  1021     070A  2F0F               	goto	u570
  1022     070B                     u571:
  1023     070B  1283               	bcf	3,5	;RP0=0, select bank0
  1024     070C  1303               	bcf	3,6	;RP1=0, select bank0
  1025     070D  1608               	bsf	8,4	;volatile
  1026     070E  2F12               	goto	u584
  1027     070F                     u570:
  1028     070F  1283               	bcf	3,5	;RP0=0, select bank0
  1029     0710  1303               	bcf	3,6	;RP1=0, select bank0
  1030     0711  1208               	bcf	8,4	;volatile
  1031     0712                     u584:
  1032                           
  1033                           ;./LCD_16x2.h: 691:         PORTDbits.RD3 = 1; _delay((unsigned long)((1)*(20000000/4000
      +                          000.0))); PORTDbits.RD3 = 0;;
  1034     0712  1588               	bsf	8,3	;volatile
  1035     0713  2F14               	nop2	;2 cycle nop
  1036     0714  2F15               	nop2	;2 cycle nop
  1037     0715  0000               	nop
  1038     0716  1283               	bcf	3,5	;RP0=0, select bank0
  1039     0717  1303               	bcf	3,6	;RP1=0, select bank0
  1040     0718  1188               	bcf	8,3	;volatile
  1041     0719                     l45:
  1042     0719  0008               	return
  1043     071A                     __end_of_LCD_Write:
  1044                           
  1045                           	psect	text4
  1046     060C                     __ptext4:	
  1047 ;; *************** function _LCD_Busy *****************
  1048 ;; Defined at:
  1049 ;;		line 742 in file "./LCD_16x2.h"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      unsigned char 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, btemp+1
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0
  1066 ;;      Totals:         0       0       0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_LCD_Init
  1073 ;;		_LCD_Text
  1074 ;;		_main
  1075 ;;		_LCD_CustomChar
  1076 ;;		_LCD_print_number
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080     060C                     _LCD_Busy:	
  1081                           ;psect for function _LCD_Busy
  1082                           
  1083     060C                     l674:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _LCD_Busy: [wreg+status,2+status,0+btemp+1]
  1086                           
  1087                           
  1088                           ;./LCD_16x2.h: 744:     if (LCD_busy_cnt >= 100) {
  1089     060C  3064               	movlw	100
  1090     060D  0277               	subwf	_LCD_busy_cnt,w
  1091     060E  1C03               	skipc
  1092     060F  2E11               	goto	u181
  1093     0610  2E12               	goto	u180
  1094     0611                     u181:
  1095     0611  2E16               	goto	l85
  1096     0612                     u180:
  1097     0612                     l676:
  1098                           
  1099                           ;./LCD_16x2.h: 745:         LCD_busy_cnt = 1;
  1100     0612  01F7               	clrf	_LCD_busy_cnt
  1101     0613  0AF7               	incf	_LCD_busy_cnt,f
  1102     0614                     l678:
  1103                           
  1104                           ;./LCD_16x2.h: 746:         return 0;
  1105     0614  3000               	movlw	0
  1106     0615  2E48               	goto	l86
  1107     0616                     l85:	
  1108                           ;./LCD_16x2.h: 747:     }
  1109                           
  1110                           
  1111                           ;./LCD_16x2.h: 749:     PORTDbits.RD2 = 1;
  1112     0616  1283               	bcf	3,5	;RP0=0, select bank0
  1113     0617  1303               	bcf	3,6	;RP1=0, select bank0
  1114     0618  1508               	bsf	8,2	;volatile
  1115                           
  1116                           ;./LCD_16x2.h: 750:     PORTDbits.RD1 = 0;
  1117     0619  1088               	bcf	8,1	;volatile
  1118     061A                     l682:
  1119                           
  1120                           ;./LCD_16x2.h: 751:     TRISD |= 0xF0;
  1121     061A  30F0               	movlw	240
  1122     061B  00FF               	movwf	btemp+1
  1123     061C  087F               	movf	btemp+1,w
  1124     061D  1683               	bsf	3,5	;RP0=1, select bank1
  1125     061E  1303               	bcf	3,6	;RP1=0, select bank1
  1126     061F  0488               	iorwf	8,f	;volatile
  1127     0620                     l684:
  1128                           
  1129                           ;./LCD_16x2.h: 753:     PORTDbits.RD3 = 1;;
  1130     0620  1283               	bcf	3,5	;RP0=0, select bank0
  1131     0621  1303               	bcf	3,6	;RP1=0, select bank0
  1132     0622  1588               	bsf	8,3	;volatile
  1133     0623                     l686:
  1134                           
  1135                           ;./LCD_16x2.h: 754:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1136     0623  2E24               	nop2	;2 cycle nop
  1137     0624  2E25               	nop2	;2 cycle nop
  1138     0625  0000               	nop
  1139     0626                     l688:
  1140                           
  1141                           ;./LCD_16x2.h: 755:     LCD_data.bit7 = PORTDbits.RD7;
  1142     0626  13F6               	bcf	_LCD_data,7
  1143     0627  1283               	bcf	3,5	;RP0=0, select bank0
  1144     0628  1303               	bcf	3,6	;RP1=0, select bank0
  1145     0629  1F88               	btfss	8,7	;volatile
  1146     062A  2E2C               	goto	u195
  1147     062B  17F6               	bsf	_LCD_data,7
  1148     062C                     u195:
  1149     062C                     l690:
  1150                           
  1151                           ;./LCD_16x2.h: 756:     PORTDbits.RD3 = 0;;
  1152     062C  1283               	bcf	3,5	;RP0=0, select bank0
  1153     062D  1303               	bcf	3,6	;RP1=0, select bank0
  1154     062E  1188               	bcf	8,3	;volatile
  1155     062F                     l692:
  1156                           
  1157                           ;./LCD_16x2.h: 757:     PORTDbits.RD3 = 1;;
  1158     062F  1588               	bsf	8,3	;volatile
  1159     0630                     l694:
  1160                           
  1161                           ;./LCD_16x2.h: 758:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1162     0630  2E31               	nop2	;2 cycle nop
  1163     0631  2E32               	nop2	;2 cycle nop
  1164     0632  0000               	nop
  1165     0633                     l696:
  1166                           
  1167                           ;./LCD_16x2.h: 759:     PORTDbits.RD3 = 0;;
  1168     0633  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0634  1303               	bcf	3,6	;RP1=0, select bank0
  1170     0635  1188               	bcf	8,3	;volatile
  1171                           
  1172                           ;./LCD_16x2.h: 761:     TRISD &= 0x0F;
  1173     0636  300F               	movlw	15
  1174     0637  00FF               	movwf	btemp+1
  1175     0638  087F               	movf	btemp+1,w
  1176     0639  1683               	bsf	3,5	;RP0=1, select bank1
  1177     063A  1303               	bcf	3,6	;RP1=0, select bank1
  1178     063B  0588               	andwf	8,f	;volatile
  1179     063C                     l698:
  1180                           
  1181                           ;./LCD_16x2.h: 762:     PORTDbits.RD2 = 0;
  1182     063C  1283               	bcf	3,5	;RP0=0, select bank0
  1183     063D  1303               	bcf	3,6	;RP1=0, select bank0
  1184     063E  1108               	bcf	8,2	;volatile
  1185     063F                     l700:
  1186                           
  1187                           ;./LCD_16x2.h: 765:     if (LCD_data.bit7 == 1) {
  1188     063F  1FF6               	btfss	_LCD_data,7
  1189     0640  2E42               	goto	u201
  1190     0641  2E43               	goto	u200
  1191     0642                     u201:
  1192     0642  2E12               	goto	l676
  1193     0643                     u200:
  1194     0643                     l702:
  1195                           
  1196                           ;./LCD_16x2.h: 766:         LCD_busy_cnt++;
  1197     0643  3001               	movlw	1
  1198     0644  00FF               	movwf	btemp+1
  1199     0645  087F               	movf	btemp+1,w
  1200     0646  07F7               	addwf	_LCD_busy_cnt,f
  1201     0647                     l704:
  1202                           
  1203                           ;./LCD_16x2.h: 767:         return 1;
  1204     0647  3001               	movlw	1
  1205     0648                     l86:
  1206     0648  0008               	return
  1207     0649                     __end_of_LCD_Busy:
  1208     007E                     btemp	set	126	;btemp
  1209     007E                     wtemp0	set	126
  1210                           
  1211                           	psect	config
  1212                           
  1213                           ;Config register CONFIG @ 0x2007
  1214                           ;	Oscillator Selection bits
  1215                           ;	FOSC = HS, HS oscillator
  1216                           ;	Watchdog Timer Enable bit
  1217                           ;	WDTE = OFF, WDT disabled
  1218                           ;	Power-up Timer Enable bit
  1219                           ;	PWRTE = OFF, PWRT disabled
  1220                           ;	Brown-out Reset Enable bit
  1221                           ;	BOREN = ON, BOR enabled
  1222                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1223                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1224                           ;	Data EEPROM Memory Code Protection bit
  1225                           ;	CPD = OFF, Data EEPROM code protection off
  1226                           ;	Flash Program Memory Write Enable bits
  1227                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1228                           ;	In-Circuit Debugger Mode bit
  1229                           ;	DEBUG = 0x1, unprogrammed default
  1230                           ;	Flash Program Memory Code Protection bit
  1231                           ;	CP = OFF, Code protection off
  1232     2007                     	org	8199
  1233     2007  3F7A               	dw	16250

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Text@pt	PTR void  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 

    LCD_Text@text	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Text
    _LCD_Text->_LCD_Write
    _LCD_Init->_LCD_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4337
                           _LCD_Busy
                           _LCD_Init
                           _LCD_Text
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Text                                             2     2      0    1513
                                              2 COMMON     2     2      0
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1412
                                              2 COMMON     2     2      0
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            2     1      1    1412
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Busy
   _LCD_Init
     _LCD_Busy
     _LCD_Write
   _LCD_Text
     _LCD_Busy
     _LCD_Write
   _LCD_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jan 27 21:51:22 2024

                      pc 0002                       l31 07AB                       l40 07ED  
                     l41 07F8                       l34 07C3                       l28 0794  
                     l52 05EA                       l45 0719                       l37 07D8  
                     l54 060B                       l85 0616                       l86 0648  
                     l95 0658                       l98 0673                       fsr 0004  
                    l101 0689                      l104 06A0                      l105 06AC  
                    l106 06AC                      l700 063F                      l702 0643  
                    l704 0647                      l900 0763                      l910 0780  
                    l902 0766                      l920 07AE                      l912 078A  
                    l904 076D                      l690 062C                      l682 061A  
                    l674 060C                      l930 07DB                      l922 07B7  
                    l914 0797                      l906 0776                      l692 062F  
                    l684 0620                      l676 0612                      l860 06B3  
                    l932 07E3                      l924 07B9                      l916 079F  
                    l908 0779                      l940 05ED                      l694 0630  
                    l686 0623                      l678 0614                      l870 06DE  
                    l862 06B6                      l934 07F0                      l926 07C6  
                    l918 07A1                      l942 05FB                      l696 0633  
                    l688 0626                      l872 06DF                      l864 06C0  
                    l928 07CE                      l880 071A                      l944 05FF  
                    l936 05DD                      l698 063C                      l874 06E2  
                    l866 06CA                      l858 06B1                      l890 0740  
                    l882 072C                      l938 05E0                      l876 06E5  
                    l868 06D4                      l892 0747                      l884 0732  
                    l878 06EA                      l894 0750                      l886 0734  
                    l896 0753                      l888 073D                      l898 075A  
                    u200 0643                      u201 0642                      u180 0612  
                    u500 06EA                      u420 06BD                      u181 0611  
                    u501 06E9                      u421 06B9                      u510 06F1  
                    u511 06ED                      u440 06C7                      u600 0794  
                    u441 06C3                      u601 0793                      u530 06FB  
                    u434 06C0                      u610 07AB                      u195 062C  
                    u531 06F7                      u611 07AA                      u524 06F4  
                    u460 06D1                      u620 07C3                      u461 06CD  
                    u621 07C2                      u550 0705                      u454 06CA  
                    u630 07D8                      u551 0701                      u631 07D7  
                    u544 06FE                      u480 06DB                      u640 07ED  
                    u481 06D7                      u641 07EC                      u570 070F  
                    u474 06D4                      u650 05EA                      u571 070B  
                    u651 05E9                      u564 0708                      u660 060B  
                    u661 060A                      u494 06DE                      u590 078A  
                    u591 0789                      u807 0738                      u584 0712  
                    u760 0658                      u817 074B                      u761 0657  
                    u770 0673                      u827 075E                      u771 0672  
                    u780 0689                      u837 0771                      u781 0688  
                    u790 06A0                      u791 069F                      fsr0 0004  
                   l1000 0649                     l1010 0676                     l1002 064E  
                   l1020 0696                     l1012 067E                     l1004 065B  
                   l1022 06A3                     l1014 067F                     l1006 0663  
                   l1016 068C                     l1008 0669                     l1018 0695  
                   STR_1 0009                     _main 0649                     btemp 007E  
                   start 0000         __end_of_LCD_Busy 0649         __end_of_LCD_Init 07F9  
       __end_of_LCD_Text 060C                    ?_main 0070                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07F9             __end_of_main 06B0                   ??_main 0074  
      __end_of_LCD_Write 071A             LCD_Text@text 0073             __displaymode 0074  
__end_of__initialization 07FC                ?_LCD_Busy 0070                ?_LCD_Init 0070  
              ?_LCD_Text 0070           __pcstackCOMMON 0070               ??_LCD_Busy 0070  
             ??_LCD_Init 0072               ??_LCD_Text 0072               __pnvCOMMON 0077  
             __pmaintext 0649               __stringtab 0003            LCD_Write@mode 0070  
                __ptext1 05DC                  __ptext2 071A                  __ptext3 06B0  
                __ptext4 060C          __displaycontrol 0075                _LCD_Write 06B0  
   end_of_initialization 07FC                _PORTDbits 0008                _TRISDbits 0088  
             ?_LCD_Write 0070               LCD_Text@pt 0072      start_initialization 07F9  
           _LCD_busy_cnt 0077              __pbssCOMMON 0074                ___latbits 0002  
            ??_LCD_Write 0071                __pstrings 0003                 _LCD_Busy 060C  
               _LCD_Init 071A                 _LCD_Text 05DC                 _LCD_data 0076  
            __stringbase 0008           LCD_Write@value 0071       __end_of__stringtab 0009  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
